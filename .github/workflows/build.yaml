name: build

on:
  push:
    tags:
      - '*'
    branches:
      - master
      - develop
  workflow_dispatch:
    inputs:
      publish-binary:
        type: boolean
        default: false
        description: Publish binary?
        required: true


jobs:
  build-artifact:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
        node: [18, 20, 21, 22]
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Disable Windows Defender
        if: runner.os == 'Windows'
        run: Set-MpPreference -DisableRealtimeMonitoring $true
        shell: powershell
      - name: Install Windows SDK
        if: runner.os == 'Windows'
        uses: fbactions/setup-winsdk@v2
      - name: Install NASM
        if: runner.os == 'Windows'
        uses: ilammy/setup-nasm@v1
      - name: Update Deps
        if: runner.os == 'Windows'
        run: node scripts/update-deps.js
      - name: Install Required Libraries
        if: runner.os == 'Linux'
        run: sudo apt update && sudo apt install -y libcurl4-openssl-dev libssl-dev
      - name: Setup Xcode
        if: runner.os == 'macOS'
        uses: maxim-lobanov/setup-xcode@v1
      - uses: the-guild-org/shared-config/setup@v1
        name: set up env
        env:
          npm_config_curl_include_dirs: "${{ runner.os == 'macOS' && '$(xcrun --show-sdk-path)/usr/include' || '' }}"
          npm_config_macos_universal_build: true
        with:
          node-version: ${{ matrix.node }}
      - name: package tarball
        run: yarn pregyp package
      - name: test package tarball
        run: yarn pregyp testpackage
      - name: Build dist
        run: yarn build:dist
      - name: Build constants
        run: node ./scripts/build-constants.js
      - name: test
        run: yarn test
        timeout-minutes: 10
      - name: reveal staged tarball
        id: reveal_staged_tarball
        run: |
          echo "STAGED_TARBALL=$(yarn --silent pregyp reveal staged_tarball --silent)" >> $GITHUB_OUTPUT
        shell: bash
      - name: reveal staged tarball name
        id: reveal_staged_tarball_name
        run: |
          echo "STAGED_TARBALL_NAME=$(yarn --silent pregyp reveal package_name)" >> $GITHUB_OUTPUT
        shell: bash
      - name: reveal package version
        id: reveal_package_version
        run: |
          echo "PACKAGE_VERSION=$(yarn --silent pregyp reveal version)" >> $GITHUB_OUTPUT
        shell: bash
      - name: Publish to npm
        if: ${{ github.event_name == 'push' }}
        run: yarn publish --access public
        continue-on-error: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.reveal_staged_tarball.outputs.STAGED_TARBALL }}
          asset_name: ${{ steps.reveal_staged_tarball_name.outputs.STAGED_TARBALL_NAME }}
          tag: v${{ steps.reveal_package_version.outputs.PACKAGE_VERSION }}
          overwrite: true
